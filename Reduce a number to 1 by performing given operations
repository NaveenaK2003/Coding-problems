Recursive way:


Given a number N. The task is to reduce the given number N to 1 in the minimum number of steps. You can perform any one of the below operations in each step.

Operation 1: If the number is even then you can divide the number by 2.
Operation 2: If the number is odd then you are allowed to perform either (n+1) or (n-1). 




import java.util.*;
public class Main
{
    public static int findMinOperation(int n){
        if(n == 1)
        return 0;
        if(n % 2 == 0){
            return 1 + findMinOperation(n / 2);
        }
        return Math.min(findMinOperation(n - 1), findMinOperation(n + 1));
    }
	public static void main(String[] args) {
	Scanner sc = new Scanner(System.in);
	int n = sc.nextInt();
	int min_operation = findMinOperation(n);
	System.out.println(min_operation);
	}
}



Using Mathematical way:


import java.util.*;
public class Main
{
    public static int findMinOperation(int n){
        int op = 0; 
        while(n > 1){
            if(n % 2 == 0){
                n /= 2;
            }
            else if(n % 4 == 1 || n == 3){
                n -= 1;
            }
            else{
                n += 1;
            }
            op++;
        }
        return op;
    }
	public static void main(String[] args) {
	Scanner sc = new Scanner(System.in);
	int n = sc.nextInt();
	int min_operation = findMinOperation(n);
	System.out.println(min_operation);
	}
}
