
Naive Approach:

class Solution {
    int maxSubarraySum(int[] arr) {
        int n = arr.length;
        int maxSum = Integer.MIN_VALUE;
        for(int i = 0; i < n; i++){
            int currSum = 0;
            for(int j = i; j < n; j++){
                currSum = currSum + arr[j];
                if(currSum > maxSum)
                maxSum = currSum;
            }
        }
        return maxSum;
    }
}

Kadane's Algorithm:

class Solution {
    int maxSubarraySum(int[] arr) {
        // Your code here
        int n = arr.length;
        int sum = 0;
        int max = Integer.MIN_VALUE;
        for(int i = 0; i < n; i++){
            sum += arr[i];
            if(sum > max)
            max = sum;
            if(sum < 0)
            sum = 0;
        }
        return max;
    }
}
